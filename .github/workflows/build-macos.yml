name: Macos build
run-name: ${{ github.actor }} is testing out GitHub Actions
on: [push]
jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Get current date as package key
        id: cache_key
        run: echo "key=$(date +'%W')" >> $GITHUB_OUTPUT

      # Force xmake to a specific folder (for cache)
      - name: Set xmake env
        run: echo "XMAKE_GLOBALDIR=${{ runner.workspace }}/xmake-global" >> $GITHUB_ENV

      # Install xmake
      - name: Setup xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: branch@dev
          actions-cache-folder: .xmake-cache-W${{ steps.cache_key.outputs.key }}

      # Update xmake repository (in order to have the file that will be cached)
      - name: Update xmake repository
        run: xmake repo --update

      # Fetch xmake dephash
      - name: Retrieve dependencies hash
        id: dep_hash
        run: echo "hash=$(xmake l utils.ci.packageskey)" >> $GITHUB_OUTPUT

      # Cache xmake dependencies
      - name: Restore cached xmake dependencies
        id: restore-depcache
        uses: actions/cache/restore@v3
        with:
          path: ${{ env.XMAKE_GLOBALDIR }}/.xmake/packages
          key: macOS-${{ matrix.arch }}-${{ matrix.confs.mode }}-${{ steps.dep_hash.outputs.hash }}-W${{ steps.cache_key.outputs.key }}

      # Save dependencies
      - name: Save cached xmake dependencies
        if: ${{ !steps.restore-depcache.outputs.cache-hit }}
        uses: actions/cache/save@v3
        with:
          path: ${{ env.XMAKE_GLOBALDIR }}/.xmake/packages
          key: ${{ steps.restore-depcache.outputs.cache-primary-key }}

      # Build the engine
      - name: Configure xmake and install dependencies
        run: xmake config --yes

      # Build the engine
      - name: Build Orion
        run: xmake --yes